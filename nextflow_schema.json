{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/multiplesequencealign/master/nextflow_schema.json",
    "title": "nf-core/multiplesequencealign pipeline parameters",
    "description": "Pipeline to run and benchmark multiple sequence alignment tools.",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/multiplesequencealign/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "tools": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "schema": "assets/schema_tools.json",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the tools to be used in the experiment.",
                    "help_text": "You will need to create a design file with information about the tools to be used before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/msa/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "templates_suffix": {
                    "type": "string",
                    "description": "Suffix of the dependencies templates.",
                    "help_text": "Suffix of the files in the accessory files directory (e.g. pdb for pdb files).",
                    "fa_icon": "fas fa-file-signature"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "align_options": {
            "title": "Stats options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define extra alignment options.",
            "properties": {
                "build_consensus": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Build consensus alignment with M-COFFEE."
                }
            }
        },
        "tool_selectors": {
            "title": "Tool selectors",
            "type": "object",
            "description": "Parameters to select which tools to use",
            "default": "",
            "fa_icon": "fas fa-tools",
            "oneOf": [{"required": ["alignment"]}, {"required": ["guidetree", "treealign"]}],
            "properties": {
                "alignment": {
                    "type": "string",
                    "description": "Which aligner tool to use"
                },
                "guidetree": {
                    "type": "string",
                    "description": "Which tool to use to generate a guide tree"
                },
                "treealign": {
                    "type": "string",
                    "description": "Which aligner tool to use to align providing a generated guide tree"
                },
                "alignment_args": {
                    "type": "string",
                    "description": "Arguments to pass to the alignment tool"
                },
                "guidetree_args": {
                    "type": "string",
                    "description": "Arguments to pass to the guide tree tool"
                },
                "treealign_args": {
                    "type": "string",
                    "description": "Arguments to pass to the tree"
                },
                "evaluate": {
                    "type": "boolean",
                    "description": "Run the evaluation workflow"
                }
            }
        },
        "stats_options": {
            "title": "Stats options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define wether to run stats.",
            "properties": {
                "skip_stats": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip all of the statistics computation on the fasta file."
                },
                "calc_sim": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate the percentage similarity across the sequences in the input files."
                },
                "calc_seq_stats": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate general statistics on input files."
                },
                "extract_plddt": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Extract plddt from structure files. Only works if the files have been generated by AF2."
                },
                "calc_gaps": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Extract total number of gaps and average number of gaps of the alignment."
                }
            }
        },
        "eval_options": {
            "title": "Eval options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define wether to run stats.",
            "properties": {
                "skip_eval": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip all of the evaluations computation on the msa."
                },
                "calc_sp": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate the Sum of Pairs of alignment."
                },
                "calc_tc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate the Total Column Score of alignment."
                },
                "calc_irmsd": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate the iRMSD of alignment."
                },
                "calc_tcs": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Calculate the Transitive Consistency Score (TCS) of alignment."
                }
            }
        },
        "reports_options": {
            "title": "Reports options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define wether to run stats.",
            "properties": {
                "skip_multiqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip the multiqc report generation."
                },
                "skip_shiny": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip the shiny report generation."
                },
                "shiny_app": {
                    "type": "string",
                    "format": "directory-path",
                    "fa_icon": "fas fa-folder-open",
                    "description": "File containing the main shiny app."
                },
                "shiny_trace_mode": {
                    "type": "string",
                    "description": "variable containing the shiny_trace mode to be used."
                }
            }
        },
        "compression": {
            "title": "Compression",
            "type": "object",
            "description": "Define wether and how to run compression",
            "default": "",
            "properties": {
                "skip_compression": {
                    "type": "boolean",
                    "description": "Produce uncompressed alignment files"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/tool_selectors"
        },
        {
            "$ref": "#/$defs/align_options"
        },
        {
            "$ref": "#/$defs/stats_options"
        },
        {
            "$ref": "#/$defs/eval_options"
        },
        {
            "$ref": "#/$defs/reports_options"
        },
        {
            "$ref": "#/$defs/compression"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ]
}
